services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    # autowire
    AppBundle\:
        resource: '../../src/AppBundle/*'
        exclude: '../../src/AppBundle/{Entity,Consumer,DataFixtures,PubSubHubbub}'

    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # github stuff
    banditore.client.guzzle:
        class: GuzzleHttp\Client

    banditore.client.github:
        class: Github\Client
        factory: [ "@banditore.github.client_discovery", find ]

    banditore.github.client_discovery:
        class: AppBundle\Github\ClientDiscovery
        arguments:
            - "@AppBundle\\Repository\\UserRepository"
            - "@snc_redis.guzzle_cache"
            - "%github_client_id%"
            - "%github_client_secret%"
            - "@logger"

    # feed stuff
    banditore.writer.webfeeds:
        class: AppBundle\Webfeeds\WebfeedsWriter
        tags:
            - { name: marcw_rss_writer.extension.writer }

    banditore.writer.rss:
        class: MarcW\RssWriter\RssWriter
        arguments:
            - ~
            -
                core: "@marcw_rss_writer.writer.core"
                webfeeds: "@banditore.writer.webfeeds"
                atom: "@marcw_rss_writer.writer.atom"
            - true
            - "    "

    # force this service to be injected at first instead of the default one (from marcw)
    MarcW\RssWriter\RssWriter: '@banditore.writer.rss'

    banditore.pubsubhubbub.publisher:
        class: AppBundle\PubSubHubbub\Publisher
        arguments:
            - "http://pubsubhubbub.appspot.com"
            - "@router"
            - "@banditore.client.guzzle"
            - "@AppBundle\\Repository\\UserRepository"
            - "%project_host%"
            - "%project_scheme%"

    banditore.rss.generator:
        class: AppBundle\Rss\Generator

    # consumers
    banditore.consumer.sync_starred_repos:
        class: AppBundle\Consumer\SyncStarredRepos
        arguments:
            - "@doctrine"
            - "@AppBundle\\Repository\\UserRepository"
            - "@AppBundle\\Repository\\StarRepository"
            - "@AppBundle\\Repository\\RepoRepository"
            - "@banditore.client.github"
            - "@logger"
        # to avoid triggering Github Client Discovery
        # which will make a doctrine query on Travis because the default limit to Github will be reached
        lazy: true

    banditore.consumer.sync_versions:
        class: AppBundle\Consumer\SyncVersions
        arguments:
            - "@doctrine"
            - "@AppBundle\\Repository\\RepoRepository"
            - "@AppBundle\\Repository\\VersionRepository"
            - "@banditore.pubsubhubbub.publisher"
            - "@banditore.client.github"
            - "@logger"
        # to avoid triggering Github Client Discovery
        # which will make a doctrine query on Travis because the default limit to Github will be reached
        lazy: true

    twig.extension.date:
        class: Twig_Extensions_Extension_Date
        tags:
            - { name: twig.extension }

    # fucked alias I don't know why we must create them
    # duplicate works of defining services ...
    # Autowiring services based on the types they implement is deprecated since Symfony 3.3 and won't be supported in version 4.0. You should rename (or alias) the "servicename" service to "classname" instead.
    Swarrot\SwarrotBundle\Broker\AmqpLibFactory:
        alias: swarrot.factory.amqp_lib

    AppBundle\Consumer\SyncStarredRepos:
        alias: banditore.consumer.sync_starred_repos

    AppBundle\Consumer\SyncVersions:
        alias: banditore.consumer.sync_versions

    Swarrot\SwarrotBundle\Broker\Publisher:
        alias: swarrot.publisher

    # force public because the bundle isn't up to date
    ashley_dawson_simple_pagination.paginator_public:
        alias: ashley_dawson_simple_pagination.paginator
        public: true
