services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    # autowire
    AppBundle\:
        resource: '../../src/AppBundle/*'
        exclude: '../../src/AppBundle/{Entity,DataFixtures}'

    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # autorwire parameters
    AppBundle\Github\ClientDiscovery:
        arguments:
            $clientId: "%github_client_id%"
            $clientSecret: "%github_client_secret%"

    AppBundle\Controller\DefaultController:
        arguments:
            $diffInterval: "%status_minute_interval_before_alert%"

    AppBundle\PubSubHubbub\Publisher:
        arguments:
            $hub: "http://pubsubhubbub.appspot.com"
            $host: "%project_host%"
            $scheme: "%project_scheme%"

    AppBundle\Webfeeds\WebfeedsWriter:
        tags:
            - { name: marcw_rss_writer.extension.writer }

    # lazy consumer
    # to avoid triggering Github Client Discovery
    # which will make a doctrine query on Travis because the default limit to Github will be reached
    AppBundle\Consumer\SyncStarredRepos:
        lazy: true

    AppBundle\Consumer\SyncVersions:
        lazy: true

    # github stuff
    banditore.client.guzzle:
        class: GuzzleHttp\Client

    banditore.client.github:
        class: Github\Client
        factory: [ "@AppBundle\\Github\\ClientDiscovery", find ]

    # feed stuff
    banditore.writer.rss:
        class: MarcW\RssWriter\RssWriter
        arguments:
            - ~
            -
                core: "@marcw_rss_writer.writer.core"
                webfeeds: "@AppBundle\\Webfeeds\\WebfeedsWriter"
                atom: "@marcw_rss_writer.writer.atom"
            - true
            - "    "

    # force this service to be injected at first instead of the default one (from marcw)
    MarcW\RssWriter\RssWriter: '@banditore.writer.rss'

    # alias to service from their class name
    Swarrot\SwarrotBundle\Broker\AmqpLibFactory:
        alias: swarrot.factory.amqp_lib

    Swarrot\SwarrotBundle\Broker\Publisher:
        alias: swarrot.publisher

    Predis\Client:
        alias: snc_redis.guzzle_cache

    GuzzleHttp\Client:
        alias: banditore.client.guzzle

    Github\Client:
        alias: banditore.client.github

    # force public because the bundle isn't up to date
    ashley_dawson_simple_pagination.paginator_public:
        alias: ashley_dawson_simple_pagination.paginator
        public: true
